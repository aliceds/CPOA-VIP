/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ihm;

import application.Appli;
import static java.awt.Color.red;
import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.io.InputStream;
import java.nio.file.Files;
import java.sql.SQLException;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import modele.ModeleApparition;
import modele.ModeleJListEvenement;
import modele.ModeleJListPays;
import modele.ModeleJTableVIPPhoto;
import modele.ModeleJTableEvenementTotal;
import modele.ModeleJTableMariage;
import modele.ModeleJTableVIPL;
import modele.ModeleJTableVIP;
import modele.ModeleJTablePhoto;
import org.apache.commons.net.ftp.FTPSClient;
import tables.Apparaitre;
import tables.Evenement;
import tables.Photo;
import tables.VIP;

/**
 *
 * @author Alice
 */
public class AccueilApplication extends javax.swing.JFrame {

    private ModeleJTableVIP leModeleVIP;
    private ModeleJListPays leModelePays;
    private ModeleJTableVIPL leModeleVIPL;
    private ModeleJListEvenement leModeleEvenement;
    private ModeleJTableMariage leModeleMariage;
    private ModeleJTableEvenementTotal leModeleEvenementTotal;
    private ModeleJTableVIPPhoto leModeleVIPPhoto;
    private ModeleJTablePhoto leModelePhoto;
    private ModeleApparition leModeleApparition;

    private VIP vip = new VIP();
    private Evenement evenement = new Evenement();
    private Photo photo = new Photo();

    // variables de date
    Date date = new Date();
    Calendar cal = new GregorianCalendar();

    // 
    private String pathPhotoSrc;
    private String pathPhotoDst = "Photos/";
    private File src;
    private File dst;

    /**
     * Creates new form AccueilApplication
     */
    public AccueilApplication() throws SQLException {
        // instanciation du modèle de données de la JTable (liste des VIP)
        this.leModeleVIP = new ModeleJTableVIP();
        this.leModelePays = new ModeleJListPays();
        this.leModeleVIPL = new ModeleJTableVIPL();
        this.leModeleEvenement = new ModeleJListEvenement();
        this.leModeleMariage = new ModeleJTableMariage();
        this.leModeleEvenementTotal = new ModeleJTableEvenementTotal();
        this.leModeleVIPPhoto = new ModeleJTableVIPPhoto();
        this.leModelePhoto = new ModeleJTablePhoto();
        this.leModeleApparition = new ModeleApparition();

        try {
            leModeleVIP.chargerLesVIP();
            leModeleMariage.chargerLesMariages();
            leModeleEvenementTotal.chargerLesEvenementsTotal();
            leModeleVIPPhoto.chargerLesVIPPhoto();
            leModelePhoto.chargerLesPhotos();
            initComponents();
        } catch (SQLException ex) {
            System.out.println("Erreur au chargement : " + ex.getMessage());
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupCivilite = new javax.swing.ButtonGroup();
        buttonGroupRole = new javax.swing.ButtonGroup();
        buttonGroupStatut = new javax.swing.ButtonGroup();
        panConsulterLesEvenements = new javax.swing.JTabbedPane();
        panAjouterVIP = new javax.swing.JPanel();
        informationsVIP = new javax.swing.JPanel();
        lbNom = new javax.swing.JLabel();
        lbPrenom = new javax.swing.JLabel();
        lbCivilite = new javax.swing.JLabel();
        lbDateNaissance = new javax.swing.JLabel();
        lbLieuNaissance = new javax.swing.JLabel();
        lbRole = new javax.swing.JLabel();
        lbStatut = new javax.swing.JLabel();
        lbPays = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        txtPrenom = new javax.swing.JTextField();
        rdM = new javax.swing.JRadioButton();
        rdMme = new javax.swing.JRadioButton();
        txtDateNaissance = new javax.swing.JTextField();
        txtLieuNaissance = new javax.swing.JTextField();
        rdLibre = new javax.swing.JRadioButton();
        rdOccupe = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listPays = new javax.swing.JList<>();
        btValiderVIP = new javax.swing.JButton();
        btAnnulerVIP = new javax.swing.JButton();
        chkActeur = new javax.swing.JCheckBox();
        chkRealisateur = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        panAjouterMariage = new javax.swing.JPanel();
        panAjoutMariage = new javax.swing.JPanel();
        lbSelectionVIP1 = new javax.swing.JLabel();
        lbConjoint = new javax.swing.JLabel();
        btnValiderMariage = new javax.swing.JButton();
        btnAnnulerMariage = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableConjoint = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tableVIP1 = new javax.swing.JTable();
        txtDateMariage = new javax.swing.JTextField();
        txtLieuMariage = new javax.swing.JTextField();
        lbDateMariage = new javax.swing.JLabel();
        lbLieuMariage = new javax.swing.JLabel();
        btnActualiserVIPL = new javax.swing.JButton();
        panAjouterDivorce = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMariages = new javax.swing.JTable();
        lbSelectionnerMariage = new javax.swing.JLabel();
        btnValiderDivorce = new javax.swing.JToggleButton();
        btnAnnulerDivorce = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        txtDateDivorce = new javax.swing.JTextField();
        btnActualiserMariages = new javax.swing.JButton();
        panAjouterPhoto = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lbChoisirPhoto = new javax.swing.JLabel();
        btnParcourir = new javax.swing.JToggleButton();
        lbNomsPhoto = new javax.swing.JLabel();
        btnAjouterPhoto = new javax.swing.JButton();
        btnAnnulerPhoto = new javax.swing.JToggleButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        tableVIPPhoto = new javax.swing.JTable();
        lbTitrePhoto = new javax.swing.JLabel();
        txtNomPhoto = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        tablePhotos = new javax.swing.JTable();
        btbActualiserPhotos = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        btnActualiserEvenements = new javax.swing.JButton();
        lbBienvenue = new javax.swing.JLabel();
        lbLogin = new javax.swing.JLabel();
        btnDeconnexion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        informationsVIP.setBorder(javax.swing.BorderFactory.createTitledBorder("Informations VIP"));

        lbNom.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbNom.setText("Nom");

        lbPrenom.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbPrenom.setText("Prénom");

        lbCivilite.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbCivilite.setText("Civilité");

        lbDateNaissance.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbDateNaissance.setText("Date de naissance");

        lbLieuNaissance.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbLieuNaissance.setText("Lieu de naissance");

        lbRole.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbRole.setText("Role");

        lbStatut.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbStatut.setText("Statut");

        lbPays.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbPays.setText("Pays");

        buttonGroupCivilite.add(rdM);
        rdM.setSelected(true);
        rdM.setText("M.");

        buttonGroupCivilite.add(rdMme);
        rdMme.setText("Mme");

        buttonGroupStatut.add(rdLibre);
        rdLibre.setSelected(true);
        rdLibre.setText("Libre");

        buttonGroupStatut.add(rdOccupe);
        rdOccupe.setText("Occupé");

        listPays.setModel(leModelePays);
        listPays.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listPays.setToolTipText("");
        jScrollPane2.setViewportView(listPays);

        btValiderVIP.setText("Valider");
        btValiderVIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btValiderVIPActionPerformed(evt);
            }
        });

        btAnnulerVIP.setText("Annuler");
        btAnnulerVIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnnulerVIPActionPerformed(evt);
            }
        });

        chkActeur.setText("Acteur/trice");

        chkRealisateur.setText("Réalisateur/trice");

        jLabel2.setText("(JJ/MM/AAAA)");

        javax.swing.GroupLayout informationsVIPLayout = new javax.swing.GroupLayout(informationsVIP);
        informationsVIP.setLayout(informationsVIPLayout);
        informationsVIPLayout.setHorizontalGroup(
            informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationsVIPLayout.createSequentialGroup()
                .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informationsVIPLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbRole)
                            .addComponent(lbNom)
                            .addComponent(lbPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbCivilite)
                            .addComponent(lbDateNaissance)
                            .addComponent(lbLieuNaissance)
                            .addComponent(lbStatut)
                            .addComponent(lbPays)))
                    .addComponent(jLabel2))
                .addGap(41, 41, 41)
                .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informationsVIPLayout.createSequentialGroup()
                        .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(informationsVIPLayout.createSequentialGroup()
                                .addComponent(rdM, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdMme, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(informationsVIPLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLieuNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informationsVIPLayout.createSequentialGroup()
                                        .addComponent(rdOccupe)
                                        .addGap(44, 44, 44)))))
                        .addContainerGap(28, Short.MAX_VALUE))
                    .addGroup(informationsVIPLayout.createSequentialGroup()
                        .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdLibre, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(informationsVIPLayout.createSequentialGroup()
                                .addComponent(chkActeur)
                                .addGap(18, 18, 18)
                                .addComponent(chkRealisateur))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(informationsVIPLayout.createSequentialGroup()
                .addComponent(btValiderVIP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btAnnulerVIP)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        informationsVIPLayout.setVerticalGroup(
            informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationsVIPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNom)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPrenom)
                    .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCivilite)
                    .addComponent(rdM)
                    .addComponent(rdMme))
                .addGap(5, 5, 5)
                .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDateNaissance)
                    .addComponent(txtDateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLieuNaissance)
                    .addComponent(txtLieuNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRole)
                    .addComponent(chkActeur)
                    .addComponent(chkRealisateur))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbStatut)
                    .addComponent(rdLibre)
                    .addComponent(rdOccupe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informationsVIPLayout.createSequentialGroup()
                        .addComponent(lbPays)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(informationsVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btValiderVIP)
                            .addComponent(btAnnulerVIP)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTable1.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        jTable1.setModel(leModeleVIP);
        jTable1.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jTable1.setShowVerticalLines(false);
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout panAjouterVIPLayout = new javax.swing.GroupLayout(panAjouterVIP);
        panAjouterVIP.setLayout(panAjouterVIPLayout);
        panAjouterVIPLayout.setHorizontalGroup(
            panAjouterVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAjouterVIPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(informationsVIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        panAjouterVIPLayout.setVerticalGroup(
            panAjouterVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAjouterVIPLayout.createSequentialGroup()
                .addGroup(panAjouterVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panAjouterVIPLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
                    .addGroup(panAjouterVIPLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(informationsVIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panConsulterLesEvenements.addTab("ajouter un VIP", panAjouterVIP);

        panAjoutMariage.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajouter un mariage"));

        lbSelectionVIP1.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbSelectionVIP1.setText("Sélectionner un VIP dans la liste");

        lbConjoint.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        lbConjoint.setText("Sélectionner le/la conjoint/e");

        btnValiderMariage.setText("Valider");
        btnValiderMariage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValiderMariageActionPerformed(evt);
            }
        });

        btnAnnulerMariage.setText("Annuler");
        btnAnnulerMariage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnnulerMariageActionPerformed(evt);
            }
        });

        tableConjoint.setModel(leModeleVIPL);
        tableConjoint.setRowHeight(19);
        tableConjoint.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tableConjoint.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane6.setViewportView(tableConjoint);

        tableVIP1.setModel(leModeleVIPL);
        tableVIP1.setOpaque(false);
        tableVIP1.setRowHeight(19);
        tableVIP1.setSelectionBackground(new java.awt.Color(204, 255, 204));
        tableVIP1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableVIP1.setUpdateSelectionOnSort(false);
        jScrollPane7.setViewportView(tableVIP1);

        lbDateMariage.setText("Année du mariage");

        lbLieuMariage.setText("Lieu du mariage");

        btnActualiserVIPL.setText("Actualiser");
        btnActualiserVIPL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualiserVIPLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panAjoutMariageLayout = new javax.swing.GroupLayout(panAjoutMariage);
        panAjoutMariage.setLayout(panAjoutMariageLayout);
        panAjoutMariageLayout.setHorizontalGroup(
            panAjoutMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAjoutMariageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panAjoutMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbSelectionVIP1)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualiserVIPL))
                .addGap(46, 46, 46)
                .addGroup(panAjoutMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbConjoint)
                    .addGroup(panAjoutMariageLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(panAjoutMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panAjoutMariageLayout.createSequentialGroup()
                                .addComponent(btnValiderMariage)
                                .addGap(18, 18, 18)
                                .addComponent(btnAnnulerMariage))
                            .addComponent(lbLieuMariage)
                            .addComponent(lbDateMariage)
                            .addComponent(txtDateMariage)
                            .addComponent(txtLieuMariage))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        panAjoutMariageLayout.setVerticalGroup(
            panAjoutMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAjoutMariageLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panAjoutMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSelectionVIP1)
                    .addComponent(lbConjoint))
                .addGroup(panAjoutMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panAjoutMariageLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(panAjoutMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panAjoutMariageLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lbDateMariage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDateMariage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(lbLieuMariage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLieuMariage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(panAjoutMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panAjoutMariageLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addGroup(panAjoutMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAnnulerMariage)
                            .addComponent(btnValiderMariage))
                        .addGap(29, 29, 29))
                    .addGroup(panAjoutMariageLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnActualiserVIPL)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout panAjouterMariageLayout = new javax.swing.GroupLayout(panAjouterMariage);
        panAjouterMariage.setLayout(panAjouterMariageLayout);
        panAjouterMariageLayout.setHorizontalGroup(
            panAjouterMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panAjouterMariageLayout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addComponent(panAjoutMariage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );
        panAjouterMariageLayout.setVerticalGroup(
            panAjouterMariageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panAjouterMariageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panAjoutMariage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panConsulterLesEvenements.addTab("ajouter un mariage", panAjouterMariage);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Informations du divorce"));

        tableMariages.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        tableMariages.setModel(leModeleMariage);
        tableMariages.setGridColor(new java.awt.Color(153, 153, 153));
        tableMariages.setRowHeight(19);
        tableMariages.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tableMariages.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableMariages.setShowVerticalLines(false);
        jScrollPane1.setViewportView(tableMariages);

        lbSelectionnerMariage.setText("Sélectionner un mariage dans la liste");

        btnValiderDivorce.setText("Valider");
        btnValiderDivorce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValiderDivorceActionPerformed(evt);
            }
        });

        btnAnnulerDivorce.setText("Annuler");

        jLabel1.setText("Année du divorce");

        txtDateDivorce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateDivorceActionPerformed(evt);
            }
        });

        btnActualiserMariages.setText("Actualiser");
        btnActualiserMariages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualiserMariagesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnActualiserMariages)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbSelectionnerMariage)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnValiderDivorce)
                                    .addGap(21, 21, 21)
                                    .addComponent(btnAnnulerDivorce))
                                .addComponent(txtDateDivorce, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(60, 60, 60))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lbSelectionnerMariage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtDateDivorce, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnValiderDivorce)
                            .addComponent(btnAnnulerDivorce))))
                .addGap(18, 18, 18)
                .addComponent(btnActualiserMariages)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panAjouterDivorceLayout = new javax.swing.GroupLayout(panAjouterDivorce);
        panAjouterDivorce.setLayout(panAjouterDivorceLayout);
        panAjouterDivorceLayout.setHorizontalGroup(
            panAjouterDivorceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAjouterDivorceLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        panAjouterDivorceLayout.setVerticalGroup(
            panAjouterDivorceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panAjouterDivorceLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        panConsulterLesEvenements.addTab("ajouter un Divorce", panAjouterDivorce);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Informations"));

        lbChoisirPhoto.setText("Choisissez un fichier");

        btnParcourir.setText("Parcourir");
        btnParcourir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParcourirActionPerformed(evt);
            }
        });

        lbNomsPhoto.setText("Sélectionner les VIP qui apparaissent sur la photo (ctrl pour sélection multiple)");

        btnAjouterPhoto.setText("Ajouter photo");
        btnAjouterPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterPhotoActionPerformed(evt);
            }
        });

        btnAnnulerPhoto.setText("Annuler");
        btnAnnulerPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnnulerPhotoActionPerformed(evt);
            }
        });

        tableVIPPhoto.setModel(leModeleVIPPhoto);
        tableVIPPhoto.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane9.setViewportView(tableVIPPhoto);

        lbTitrePhoto.setText("Entrez le nom de la photo");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbChoisirPhoto)
                            .addComponent(btnParcourir))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNomPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTitrePhoto)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbNomsPhoto, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(btnAjouterPhoto)
                                .addGap(116, 116, 116)
                                .addComponent(btnAnnulerPhoto)))
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbChoisirPhoto)
                    .addComponent(lbTitrePhoto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnParcourir)
                    .addComponent(txtNomPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbNomsPhoto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAjouterPhoto)
                    .addComponent(btnAnnulerPhoto))
                .addContainerGap())
        );

        tablePhotos.setModel(leModelePhoto);
        jScrollPane10.setViewportView(tablePhotos);

        btbActualiserPhotos.setText("Actualiser");
        btbActualiserPhotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbActualiserPhotosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panAjouterPhotoLayout = new javax.swing.GroupLayout(panAjouterPhoto);
        panAjouterPhoto.setLayout(panAjouterPhotoLayout);
        panAjouterPhotoLayout.setHorizontalGroup(
            panAjouterPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panAjouterPhotoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panAjouterPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btbActualiserPhotos)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        panAjouterPhotoLayout.setVerticalGroup(
            panAjouterPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAjouterPhotoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panAjouterPhotoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btbActualiserPhotos)
                .addGap(41, 41, 41))
        );

        panConsulterLesEvenements.addTab("ajouter une photo", panAjouterPhoto);

        jScrollPane4.setBackground(java.awt.Color.white);

        jTable3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable3.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        jTable3.setModel(leModeleEvenementTotal);
        jTable3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable3.setGridColor(new java.awt.Color(153, 153, 153));
        jTable3.setRowHeight(19);
        jTable3.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jTable3.setShowVerticalLines(false);
        jTable3.getTableHeader().setResizingAllowed(false);
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable3);

        btnActualiserEvenements.setText("Actualiser");
        btnActualiserEvenements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualiserEvenementsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnActualiserEvenements)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(btnActualiserEvenements)
                .addContainerGap())
        );

        panConsulterLesEvenements.addTab("consulter les événements", jPanel2);

        lbBienvenue.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 48)); // NOI18N
        lbBienvenue.setText("Bienvenue");

        btnDeconnexion.setText("déconnexion");
        btnDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeconnexionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(lbBienvenue)
                .addGap(53, 53, 53)
                .addComponent(lbLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 304, Short.MAX_VALUE)
                .addComponent(btnDeconnexion)
                .addGap(107, 107, 107))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panConsulterLesEvenements, javax.swing.GroupLayout.PREFERRED_SIZE, 1005, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbBienvenue))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDeconnexion)
                            .addComponent(lbLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(panConsulterLesEvenements, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btValiderVIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btValiderVIPActionPerformed
        // TODO add your handling code here:
        try {
            // validation saisie du nom
            String leNom = txtNom.getText();
            if (leNom.isEmpty()) {
                throw new Exception("champ nom vide");
            }
            vip.setNom(leNom);

            // saisie du prénom
            String lePrenom = txtPrenom.getText();
            if (lePrenom.isEmpty()) {
                throw new Exception("champ prénom vide");
            }
            vip.setPrenom(lePrenom);

            // saisie de la civilité
            if (rdM.isSelected()) {
                vip.setCivilite(rdM.getText());
            } else {
                vip.setCivilite(rdMme.getText());
            }

            // saisie date de naissance
            String laDateNaissance = txtDateNaissance.getText();
            String[] champsDate = laDateNaissance.split("/");
            try {
                LocalDate dateNaissance = LocalDate.of(
                        Integer.parseInt(champsDate[2]),
                        Integer.parseInt(champsDate[1]),
                        Integer.parseInt(champsDate[0])
                );
                vip.setDatenaissance(dateNaissance);
            } catch (DateTimeException | NumberFormatException | ArrayIndexOutOfBoundsException ex) {
                throw new Exception("format de date incorrect");
            }

            // saisie lieu de naissance
            String leLieuNaissance = txtLieuNaissance.getText();
            if (leLieuNaissance.isEmpty()) {
                throw new Exception("champ lieu de naissance vide");
            }
            vip.setLieunaissance(leLieuNaissance);

            // saisie role
            if (chkActeur.isSelected() && chkRealisateur.isSelected()) {
                vip.setRole("AR");
            } else if (chkActeur.isSelected()) {
                vip.setRole("A");
            } else {
                vip.setRole("R");
            }

            // saisie statut
            if (rdLibre.isSelected()) {
                vip.setStatut("L");
            } else {
                vip.setStatut("O");
            }

            //saisie pays
            vip.setPays(listPays.getSelectedValue());

            // insertion dans la base
            leModeleVIP.insererVIP(vip);

            // réinitialisation des champs
            txtNom.setText("");
            txtPrenom.setText("");
            rdM.setSelected(true);
            rdMme.setSelected(false);
            txtDateNaissance.setText("");
            txtLieuNaissance.setText("");
            chkActeur.setSelected(false);
            chkRealisateur.setSelected(false);
            rdLibre.setSelected(true);
            rdOccupe.setSelected(false);
            listPays.setSelectedIndex(0);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erreur", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btValiderVIPActionPerformed

    private void btAnnulerVIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnnulerVIPActionPerformed
        // TODO add your handling code here:
        txtNom.setText("");
        txtPrenom.setText("");
        rdM.setSelected(true);
        rdMme.setSelected(false);
        txtDateNaissance.setText("");
        txtLieuNaissance.setText("");
        chkActeur.setSelected(false);
        chkRealisateur.setSelected(false);
        rdLibre.setSelected(true);
        rdOccupe.setSelected(false);
        listPays.setSelectedIndex(0);
    }//GEN-LAST:event_btAnnulerVIPActionPerformed

    private void btnDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeconnexionActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnDeconnexionActionPerformed

    private void btnValiderMariageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValiderMariageActionPerformed
        // TODO add your handling code here:
        // récupération de l'année d'aujourd'hui
        cal.setTime(date);
        int year = Integer.valueOf(String.format("%1$tY", date));

        try {
            //numVIP1
            int numVIP1 = (int) tableVIP1.getValueAt(tableVIP1.getSelectedRow(), 0);
            evenement.setNumVIP1(numVIP1);

            //numVIP2
            int numConjoint = (int) tableConjoint.getValueAt(tableConjoint.getSelectedRow(), 0);
            evenement.setNumVIP2(numConjoint);

            // date_mariage
            String laDateMariage = txtDateMariage.getText();
            if (laDateMariage.isEmpty()) {
                throw new Exception("date incorrecte");
            } else if (Integer.parseInt(laDateMariage) > year) {
                throw new Exception("date incorrecte");
            }
            evenement.setDate_mariage(Integer.parseInt(laDateMariage));

            //lieu_mariage
            String lieuMariage = txtLieuMariage.getText();
            if (lieuMariage.isEmpty()) {
                throw new Exception("champ lieu de mariage vide");
            }
            evenement.setLieu_mariage(lieuMariage);

            // insertion dans la base
            leModeleEvenement.insererEvenement(evenement);

            // réinitialisation des champs
            txtDateMariage.setText("");
            txtLieuMariage.setText("");
            tableVIP1.getSelectionModel().setSelectionInterval(0, 0);
            tableConjoint.getSelectionModel().setSelectionInterval(0, 0);
            
            JOptionPane.showMessageDialog(this, "Le mariage a bien été enregistré.", "Validation", JOptionPane.INFORMATION_MESSAGE);


        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erreur", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnValiderMariageActionPerformed

    private void btnAnnulerMariageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnnulerMariageActionPerformed
        // TODO add your handling code here:
        txtDateMariage.setText("");
        txtLieuMariage.setText("");
        tableVIP1.getSelectionModel().setSelectionInterval(0, 0);
        tableConjoint.getSelectionModel().setSelectionInterval(0, 0);
    }//GEN-LAST:event_btnAnnulerMariageActionPerformed

    private void txtDateDivorceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateDivorceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateDivorceActionPerformed

    private void btnValiderDivorceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValiderDivorceActionPerformed
        // TODO add your handling code here:

        try {
            //numVIP1
            int numVIP1 = (int) tableMariages.getValueAt(tableMariages.getSelectedRow(), 0);
            evenement.setNumVIP1(numVIP1);

            //date mariage
            int dateMariage = (int) tableMariages.getValueAt(tableMariages.getSelectedRow(), 6);
            evenement.setDate_mariage(dateMariage);

            // date divorce
            String dateDivorce = txtDateDivorce.getText();
            if (dateDivorce.isEmpty()) {
                throw new Exception("date incorrecte");
            }
            int laDateDivorce = Integer.parseInt(txtDateDivorce.getText());
            evenement.setDate_divorce(laDateDivorce);

            System.out.println(numVIP1 + " " + dateMariage + " " + dateDivorce);

            // insertion dans la base
            leModeleEvenement.modifierEvenement(evenement);

            // réinitialisation des champs
            txtDateDivorce.setText("");
            tableMariages.getSelectionModel().setSelectionInterval(0, 0);
            
            JOptionPane.showMessageDialog(this, "Le divorce a bien été enregistré.", "Validation", JOptionPane.INFORMATION_MESSAGE);


        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erreur", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_btnValiderDivorceActionPerformed

    private void btnActualiserMariagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualiserMariagesActionPerformed
        try {
            // TODO add your handling code here:
            leModeleMariage.chargerLesMariages();
        } catch (SQLException ex) {
            System.out.println("erreur au chargement des mariages : " + ex.getMessage());
        }
    }//GEN-LAST:event_btnActualiserMariagesActionPerformed

    private void btnActualiserVIPLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualiserVIPLActionPerformed
        try {
            // TODO add your handling code here:
            leModeleVIPL.chargerLesVIPL();
        } catch (SQLException ex) {
            System.out.println("erreur lors du chargement des VIPL : " + ex.getMessage());
        }
    }//GEN-LAST:event_btnActualiserVIPLActionPerformed

    private void btnParcourirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParcourirActionPerformed
        //ajouter un file filter
        JFileChooser of = new JFileChooser();
        
        int option = of.showOpenDialog(of);

        if (option == JFileChooser.APPROVE_OPTION) {
            pathPhotoSrc = of.getSelectedFile().getPath();
            src = new File(pathPhotoSrc);
        }

    }//GEN-LAST:event_btnParcourirActionPerformed

    private void btnAjouterPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterPhotoActionPerformed
        // TODO add your handling code here:
        // récupérer nom de la photo
        
        try {
            String leTitre = txtNomPhoto.getText();
            if (leTitre.isEmpty()) {
                throw new Exception("entrez un nom de photo");
            }
            photo.setNom_fichier(leTitre);
            
            leModelePhoto.insererPhoto(photo);
            leModelePhoto.recupererLaPhoto(photo);
            
            dst = new File(pathPhotoDst+leTitre);
            
            InputStream input = new FileInputStream(src.getPath());
            
            //Files.copy(src.toPath(), dst.toPath());
            FTPSClient ftp = Appli.getFtp();
            ftp.storeFile("/public_html/cpoa/Photos/" + leTitre, input);
           
            // tableau
            int[] nb = tableVIPPhoto.getSelectedRows();
            for (int i : nb) {
                Apparaitre a = new Apparaitre();
                a.setID_photo(photo.getID_photo());
                a.setNumVIP((int) tableVIPPhoto.getValueAt(i,0)); 
                System.out.println("id des apparitions : " + tableVIPPhoto.getValueAt(i, 0));
                leModeleApparition.insererApparition(a);
            }
            
            // réinitialisation des champs
            txtNomPhoto.setText("");
            txtNomPhoto.setText("");
            tableVIPPhoto.getSelectionModel().setSelectionInterval(0, 0);
            btnParcourir.setSelected(false);
            
            JOptionPane.showMessageDialog(this, "La photo a bien été ajoutée.", "Validation", JOptionPane.INFORMATION_MESSAGE);
            

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erreur", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_btnAjouterPhotoActionPerformed

    private void btbActualiserPhotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbActualiserPhotosActionPerformed
        try {
            // TODO add your handling code here:
            leModelePhoto.chargerLesPhotos();
        } catch (SQLException ex) {
            System.out.println("erreur de chargement des photos : "+ ex.getMessage());
        }
    }//GEN-LAST:event_btbActualiserPhotosActionPerformed

    private void btnActualiserEvenementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualiserEvenementsActionPerformed
        try {
            // TODO add your handling code here:
            leModeleEvenement.chargerLesEvenements();
        } catch (SQLException ex) {
            System.out.println("erreur au chargement des événements : " + ex.getMessage());
        }
    }//GEN-LAST:event_btnActualiserEvenementsActionPerformed

    private void btnAnnulerPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnnulerPhotoActionPerformed
        // TODO add your handling code here:
        txtNomPhoto.setText("");
        tableVIPPhoto.getSelectionModel().setSelectionInterval(0, 0);
        btnParcourir.setSelected(false);
    }//GEN-LAST:event_btnAnnulerPhotoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccueilApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccueilApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccueilApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccueilApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AccueilApplication().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(AccueilApplication.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnnulerVIP;
    private javax.swing.JButton btValiderVIP;
    private javax.swing.JToggleButton btbActualiserPhotos;
    private javax.swing.JButton btnActualiserEvenements;
    private javax.swing.JButton btnActualiserMariages;
    private javax.swing.JButton btnActualiserVIPL;
    private javax.swing.JButton btnAjouterPhoto;
    private javax.swing.JToggleButton btnAnnulerDivorce;
    private javax.swing.JButton btnAnnulerMariage;
    private javax.swing.JToggleButton btnAnnulerPhoto;
    private javax.swing.JButton btnDeconnexion;
    private javax.swing.JToggleButton btnParcourir;
    private javax.swing.JToggleButton btnValiderDivorce;
    private javax.swing.JButton btnValiderMariage;
    private javax.swing.ButtonGroup buttonGroupCivilite;
    private javax.swing.ButtonGroup buttonGroupRole;
    private javax.swing.ButtonGroup buttonGroupStatut;
    private javax.swing.JCheckBox chkActeur;
    private javax.swing.JCheckBox chkRealisateur;
    private javax.swing.JPanel informationsVIP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel lbBienvenue;
    private javax.swing.JLabel lbChoisirPhoto;
    private javax.swing.JLabel lbCivilite;
    private javax.swing.JLabel lbConjoint;
    private javax.swing.JLabel lbDateMariage;
    private javax.swing.JLabel lbDateNaissance;
    private javax.swing.JLabel lbLieuMariage;
    private javax.swing.JLabel lbLieuNaissance;
    private javax.swing.JLabel lbLogin;
    private javax.swing.JLabel lbNom;
    private javax.swing.JLabel lbNomsPhoto;
    private javax.swing.JLabel lbPays;
    private javax.swing.JLabel lbPrenom;
    private javax.swing.JLabel lbRole;
    private javax.swing.JLabel lbSelectionVIP1;
    private javax.swing.JLabel lbSelectionnerMariage;
    private javax.swing.JLabel lbStatut;
    private javax.swing.JLabel lbTitrePhoto;
    private javax.swing.JList<String> listPays;
    private javax.swing.JPanel panAjoutMariage;
    private javax.swing.JPanel panAjouterDivorce;
    private javax.swing.JPanel panAjouterMariage;
    private javax.swing.JPanel panAjouterPhoto;
    private javax.swing.JPanel panAjouterVIP;
    private javax.swing.JTabbedPane panConsulterLesEvenements;
    private javax.swing.JRadioButton rdLibre;
    private javax.swing.JRadioButton rdM;
    private javax.swing.JRadioButton rdMme;
    private javax.swing.JRadioButton rdOccupe;
    private javax.swing.JTable tableConjoint;
    private javax.swing.JTable tableMariages;
    private javax.swing.JTable tablePhotos;
    private javax.swing.JTable tableVIP1;
    private javax.swing.JTable tableVIPPhoto;
    private javax.swing.JTextField txtDateDivorce;
    private javax.swing.JTextField txtDateMariage;
    private javax.swing.JTextField txtDateNaissance;
    private javax.swing.JTextField txtLieuMariage;
    private javax.swing.JTextField txtLieuNaissance;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtNomPhoto;
    private javax.swing.JTextField txtPrenom;
    // End of variables declaration//GEN-END:variables
}
